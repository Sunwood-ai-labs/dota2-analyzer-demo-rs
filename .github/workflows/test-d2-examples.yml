name: Test D2 Examples

on:
  push:
    branches: [ main, claude/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  DEMO_URL: https://huggingface.co/datasets/MakiAi/dota2-sample-dem/resolve/main/auto-20251019-2017-start-maki.dem
  DEMO_FILE: test-replay.dem

jobs:
  test-examples:
    name: Test D2 Examples with Demo File
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Download demo file
        run: |
          echo "Downloading demo file from HuggingFace..."
          curl -L -o "$DEMO_FILE" "$DEMO_URL"
          if [ ! -f "$DEMO_FILE" ]; then
            echo "Failed to download demo file"
            exit 1
          fi
          echo "Demo file downloaded successfully"
          ls -lh "$DEMO_FILE"

      - name: Build all d2-examples
        working-directory: d2-examples
        run: |
          echo "Building all d2-examples..."
          cargo build --release --all

      - name: Test chat example
        working-directory: d2-examples
        run: |
          echo "=== Testing chat example ==="
          cargo run --release --bin chat -- "../$DEMO_FILE" || {
            echo "Chat example failed"
            exit 1
          }
          echo "Chat example completed successfully"

      - name: Test positions example
        working-directory: d2-examples
        run: |
          echo "=== Testing positions example ==="
          cargo run --release --bin positions -- "../$DEMO_FILE" || {
            echo "Positions example failed"
            exit 1
          }
          if [ -f "positions.csv" ]; then
            echo "positions.csv generated successfully"
            wc -l positions.csv
          else
            echo "positions.csv was not generated"
            exit 1
          fi

      - name: Test combatlog example
        working-directory: d2-examples
        run: |
          echo "=== Testing combatlog example ==="
          cargo run --release --bin combatlog -- "../$DEMO_FILE" || {
            echo "Combatlog example failed"
            exit 1
          }
          echo "Combatlog example completed successfully"

      - name: Test lifestate example
        working-directory: d2-examples
        run: |
          echo "=== Testing lifestate example ==="
          cargo run --release --bin lifestate -- "../$DEMO_FILE" || {
            echo "Lifestate example failed"
            exit 1
          }
          echo "Lifestate example completed successfully"

      - name: Test wards example
        working-directory: d2-examples
        run: |
          echo "=== Testing wards example ==="
          cargo run --release --bin wards -- "../$DEMO_FILE" || {
            echo "Wards example failed"
            exit 1
          }
          echo "Wards example completed successfully"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs
          path: |
            d2-examples/positions.csv
            d2-examples/*.txt
          if-no-files-found: ignore
